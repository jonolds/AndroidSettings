<application>
  <component name="StructuralSearch">
    <replaceConfiguration name="PrivateFinalToPublic" text="private final $FieldType$ $Field$;" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="public $FieldType$ $Field$;&#10;">
      <constraint name="__context__" within="" contains="" />
      <constraint name="FieldType" target="true" within="" contains="" />
      <constraint name="Field" within="" contains="" />
    </replaceConfiguration>
    <replaceConfiguration name="ColumnInfo" text="public $FieldType$ $Field$;" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="false" replacement="@androidx.room.ColumnInfo(name = &quot;$Field2$&quot;)&#10;public $FieldType$ $Field$;&#10;">
      <constraint name="__context__" within="" contains="" />
      <constraint name="FieldType" within="" contains="" />
      <constraint name="Field" target="true" within="" contains="" />
      <variableDefinition name="Field2" script="&quot;Field.name.replaceAll( /([A-Z])/, /_$1/ ).toLowerCase().replaceAll( /^_/, '' )&quot;" />
    </replaceConfiguration>
    <replaceConfiguration name="EntityAnnotation" text="class $Class1$ {}" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="@androidx.room.Entity(tableName = &quot;$Class2$&quot;)&#10;class $Class3$ {}&#10;">
      <constraint name="__context__" within="" contains="" />
      <constraint name="Class1" script="&quot;!Class1.name.contains(&quot;Request&quot;) &amp;&amp; !Class1.name.contains(&quot;Response&quot;) &amp;&amp; !Class1.name.contains(&quot;Builder&quot;) &amp;&amp; !Class1.name.contains(&quot;Query&quot;) &amp;&amp; !Class1.name.contains(&quot;Filter&quot;) &amp;&amp; !Class1.name.contains(&quot;Recipient&quot;) &amp;&amp; !Class1.name.contains(&quot;V1&quot;) &amp;&amp; !Class1.name.contains(&quot;Shift&quot;) &amp;&amp; !Class1.name.contains(&quot;Tender&quot;) &amp;&amp; !Class1.name.startsWith(&quot;Device&quot;) &amp;&amp; !Class1.name.contains(&quot;Error&quot;) &amp;&amp; !Class1.name.startsWith(&quot;Break&quot;) &amp;&amp; !Class1.name.startsWith(&quot;Source&quot;) &amp;&amp; !Class1.name.startsWith(&quot;Standard&quot;) &amp;&amp; !Class1.name.startsWith(&quot;Search&quot;) &amp;&amp; !Class1.name.contains(&quot;Config&quot;) &amp;&amp; !Class1.name.equals(&quot;Money&quot;)  &amp;&amp; !Class1.name.contains(&quot;BusinessHours&quot;)  &amp;&amp; !Class1.name.contains(&quot;Range&quot;) &amp;&amp; !Class1.name.startsWith(&quot;Inventory&quot;) &amp;&amp; !Class1.name.equals(&quot;Merchant&quot;) &amp;&amp; !Class1.name.startsWith(&quot;Customer&quot;) &amp;&amp; !Class1.name.startsWith(&quot;Loyalty&quot;)&quot;" within="" contains="" />
      <variableDefinition name="Class2" script="&quot;Class1.name.replaceAll( /([A-Z])/, /_$1/ ).toLowerCase().replaceAll( /^_/, '' )&quot;" />
      <variableDefinition name="Class3" script="&quot;Class1.name&quot;" />
    </replaceConfiguration>
  </component>
</application>